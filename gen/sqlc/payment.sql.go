// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.28.0
// source: payment.sql

package sqlc

import (
	"context"
)

const createPayment = `-- name: CreatePayment :one
INSERT INTO payment.base (
    user_id,
    address,
    payment_method,
    total,
    status,
    date_created
)
VALUES (
    $1, $2, $3, $4, $5, NOW()
) 
RETURNING id, user_id, address, payment_method, total, status, date_created
`

type CreatePaymentParams struct {
	UserID        int64
	Address       string
	PaymentMethod PaymentPaymentMethod
	Total         int64
	Status        PaymentStatus
}

func (q *Queries) CreatePayment(ctx context.Context, arg CreatePaymentParams) (PaymentBase, error) {
	row := q.db.QueryRow(ctx, createPayment,
		arg.UserID,
		arg.Address,
		arg.PaymentMethod,
		arg.Total,
		arg.Status,
	)
	var i PaymentBase
	err := row.Scan(
		&i.ID,
		&i.UserID,
		&i.Address,
		&i.PaymentMethod,
		&i.Total,
		&i.Status,
		&i.DateCreated,
	)
	return i, err
}

type CreatePaymentProductsParams struct {
	PaymentID       int64
	ProductSerialID string
	Quantity        int64
	Price           int64
	TotalPrice      int64
}
